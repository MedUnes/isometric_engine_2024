(()=>{"use strict";var t={255:(t,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.Draw=void 0,o.Draw=class{static clear(t){t.clear()}static drawGrid(t,o){t.forEach((s=>{s.forEach((s=>{const i=s.neighbours(t).east;i&&o.drawLine(s.coords,i.coords);const e=s.neighbours(t).south;e&&o.drawLine(s.coords,e.coords)}))}))}static drawFilledRectangle(t,o,s){t.forEach((t=>{const i=t.hasFourNeighbours(o);i&&s.drawFilledPolygon([i.topLeft,i.topRight,i.bottomRight,i.bottomLeft].map((t=>({x:t.coords.x,y:t.coords.y}))))}))}}},418:(t,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.GridPoint=void 0,o.GridPoint=class{constructor(t,o,s){this.x=t,this.y=o,this.isometric=s,this.isFilled=!1,this.height=0,this.baseCoords=this.isometric.coords(t,o),this.height=Math.floor(2*Math.random()-2),0===t&&0===o&&(this.height=0),this.coords={x:this.baseCoords.x,y:this.baseCoords.y+-15*this.height}}neighbours(t){var o,s,i,e,r,n,h,c;return{north:null!==(s=null===(o=t[this.y-1])||void 0===o?void 0:o[this.x])&&void 0!==s?s:null,east:null!==(e=null===(i=t[this.y])||void 0===i?void 0:i[this.x+1])&&void 0!==e?e:null,south:null!==(n=null===(r=t[this.y+1])||void 0===r?void 0:r[this.x])&&void 0!==n?n:null,west:null!==(c=null===(h=t[this.y])||void 0===h?void 0:h[this.x-1])&&void 0!==c?c:null}}updateCoords(t){}increaseHeight(){this.height-=1,this.coords.y=this.baseCoords.y+15*this.height,console.log(this)}hasFourNeighbours(t){var o;const s=this.neighbours(t).east,i=this.neighbours(t).south,e=null!==(o=null==i?void 0:i.neighbours(t).east)&&void 0!==o?o:null;return this&&s&&i&&e?{topLeft:this,topRight:s,bottomLeft:i,bottomRight:e}:null}neighbourCoords(t,o){return{topLeft:o.topLeft.coords,topRight:o.topRight.coords,bottomLeft:o.bottomLeft.coords,bottomRight:o.bottomRight.coords}}isPointInsideCell(t,o){const s=this.hasFourNeighbours(o);if(!s)return;const i=this.neighbourCoords(o,s),e=this.getLineParameters(i.topLeft,i.topRight),r=this.getLineParameters(i.bottomLeft,i.bottomRight),n=this.getLineParameters(i.topLeft,i.bottomLeft),h=this.getLineParameters(i.topRight,i.bottomRight);return!this.pointIsAboveLine(t,e)&&this.pointIsAboveLine(t,r)&&this.pointIsAboveLine(t,n)&&!this.pointIsAboveLine(t,h)}pointIsAboveLine(t,o){const s=o.a*t.x+o.b;return t.y<=s}getLineParameters(t,o){if(t.x===o.x)throw new Error("vertical line. I need to handle this with a special case.");const s=(t.y-o.y)/(t.x-o.x);return{a:s,b:t.y-t.x*s}}}},93:(t,o,s)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.Grid=void 0;const i=s(418),e=s(28);o.Grid=class{constructor(t,o){this.isometric=new e.Isometric,this.grid=Array.from(Array(o),((o,s)=>Array.from(Array(t),((t,o)=>new i.GridPoint(o,s,this.isometric)))))}closestViaIntersection(t,o,s){return this.grid.flat().filter((i=>{const e=i.hasFourNeighbours(s);return!!e&&(e.topLeft.coords.x<t&&e.bottomRight.coords.x>t&&e.bottomLeft.coords.y>o&&e.topRight.coords.y<o)})).filter((i=>i.isPointInsideCell({x:t,y:o},s)))[0]}closestPoint(t,o){return this.closestViaIntersection(t,o,this.grid)}}},28:(t,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.Isometric=void 0,o.Isometric=class{get c1(){return[2*this.xStep,2*this.xStep,0]}get c2(){return[-1*this.yStep,this.yStep,0]}constructor(t=10*Math.sqrt(3),o=20){this.xStep=t,this.yStep=o}coords(t,o){return{x:t*this.c1[0]+o*this.c1[1]+this.c1[2],y:t*this.c2[0]+o*this.c2[1]+this.c2[2]}}inverse(t,o){const s=(this.c2[0]*(this.c1[2]-t)+this.c1[0]*(o-this.c2[2]))/(this.c1[0]*this.c2[1]-this.c2[0]*this.c1[1]),i=(o-this.c2[2]-s*this.c2[1])/this.c2[0];return{y:Math.floor(i),x:Math.floor(s)}}}}},o={};function s(i){var e=o[i];if(void 0!==e)return e.exports;var r=o[i]={exports:{}};return t[i](r,r.exports,s),r.exports}(()=>{const t=s(255),o=s(93);const i=new class{constructor(t=10,s=10){this.grid=new o.Grid(t,s),console.log(this.grid)}}(30,30),e=new class{constructor(t,o={x:0,y:0}){this.screen=o;const s=document.getElementById("canvas"),i=s.getContext("2d");if(!i)throw new Error("oh no. No canvas found.");this.ctx=i,s.onclick=o=>{console.log(`x: ${o.offsetX} y: ${o.offsetY}`),t(o.offsetX,o.offsetY)}}drawLine(t,o){this.ctx.beginPath(),this.ctx.moveTo(this.translateX(t.x),this.translateY(t.y)),this.ctx.moveTo(this.translateX(t.x),this.translateY(t.y)),this.ctx.lineTo(this.translateX(o.x),this.translateY(o.y)),this.ctx.stroke()}drawFilledPolygon(t){console.log(t);const o=new Path2D;o.moveTo(t[0].x,t[0].y),t.slice(1).forEach((t=>{o.lineTo(t.x,t.y)})),o.closePath(),this.ctx.fillStyle="green",this.ctx.fill(o)}test(){const t=new Path2D;t.moveTo(30,90),t.lineTo(110,20),t.lineTo(240,130),t.lineTo(60,130),t.lineTo(190,20),t.lineTo(270,90),t.closePath(),this.ctx.fillStyle="green",this.ctx.fill(t,"evenodd")}clear(){this.ctx.clearRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height)}moveScreen(t,o){this.screen.x+=t,this.screen.y+=o}translateX(t){return t+this.screen.x}translateY(t){return t+this.screen.y}}(((o,s)=>{const n=i.grid.closestPoint(o,s);n?console.log(`found: x: ${n.x} y: ${n.y}`):console.log("none found"),n&&(i.grid.grid[n.y][n.x].isFilled=!i.grid.grid[n.y][n.x].isFilled);const h=i.grid.grid.flat().filter((t=>t.isFilled));t.Draw.clear(e),t.Draw.drawFilledRectangle(h,i.grid.grid,e),r()}),{x:0,y:0}),r=()=>t.Draw.drawGrid(i.grid.grid,e);r()})()})();
//# sourceMappingURL=bundle.js.map